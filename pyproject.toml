[project]
name = "osm-rawdata"
dynamic = ["version"]
description = "Make data extracts from OSM data."
authors = [
    {name = "Rob Savoye", email = "rob.savoye@hotosm.org"},
]
dependencies = [
    "deepdiff>=6.3.1",
    "GDAL>=3.6.4",
    "landez>=2.5.0",
    "ogr>=0.0.1",
    "osmium>=3.6.0",
    "pyparsing>=3.0.9",
    "PyYAML>=6.0.1",
    "requests>=2.28.2",
    "shapely>=2.0.1",
    "mkdocstrings-python>=1.3.0",
]
requires-python = ">=3.9"
readme = "README.md"
license = "GPL-3.0-only"
keywords = ["hot", "osm", "openstreetmap"]
classifiers = [
    "Topic :: Utilities",
    "Topic :: Scientific/Engineering :: GIS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
]

[project.urls]
homepage = "https://github.com/hotosm/osm-rawdata/wiki"
documentation = "https://github.com/hotosm/osm-rawdata/wiki"
repository = "https://github.com/hotosm/osm-rawdata"

[tool.pdm]
version = {from = "osm_rawdata/__version__.py"}
[tool.pdm.build]
includes = ["osm_rawdata"]
source-includes = ["tests", "LICENSE.md", "README.md"]
[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.2.1",
]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool.pytest.ini_options]
addopts = "-ra -q -p no:warnings"
testpaths = [
    "tests",
]
pythonpath = "osm_rawdata"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
version_files = [
    "pyproject.toml:version",
    "osm_rawdata/__version__.py",
    "Makefile:VERSION",
]

[project.scripts]
# osm-rawdata = "osm_rawdata.cmd:main"
# hot-import = "osm_rawdata.postgres:main"
geofabrik = "osm_rawdata.geofabrik:main"
